{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\Hardware-Inventory-App\\\\client\\\\pages\\\\login.js\";\nimport firebase from \"../firebase\";\nimport { useDebugValue, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport LoginRegisterForm from \"../components/LoginRegisterForm\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\n\nconst Login = () => {\n  const {\n    0: loginEmail,\n    1: setLoginEmail\n  } = useState(\"mccornhusk@gmail.com\");\n  const {\n    0: loginPass,\n    1: setLoginPass\n  } = useState(\"123456\");\n  const {\n    0: registerEmail,\n    1: setRegisterEmail\n  } = useState(\"\");\n  const {\n    0: registerPass,\n    1: setRegisterPass\n  } = useState(\"\");\n  const router = useRouter();\n\n  const register = async () => {\n    //console.log(registerEmail, registerPass)\n    await firebase.auth().createUserWithEmailAndPassword(registerEmail, registerPass).then(user => {\n      console.log(\"REGISTER\", user);\n    }).catch(err => {\n      console.log(err);\n      toast(err.message);\n    });\n  };\n\n  const login = async () => {\n    //console.log(loginEmail, loginPass)\n    await firebase.auth().signInWithEmailAndPassword(loginEmail, loginPass).then(user => {\n      console.log(\"LOGIN\", user);\n    }).catch(err => {\n      console.log(err);\n      toast(err.message);\n    });\n  };\n\n  const googleLogin = async () => {\n    await firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(user => {\n      console.log(\"LOGIN\", user);\n    }).catch(err => {\n      console.log(err);\n      toast(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center pt-4 display-4\",\n      children: \"Login / Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: googleLogin,\n      className: \"mb-3 col-md-6 offset-md-3\",\n      type: \"success\",\n      shape: \"round\",\n      icon: /*#__PURE__*/_jsxDEV(GoogleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this),\n      size: \"large\",\n      block: \"true\",\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(LoginRegisterForm, {\n        email: loginEmail,\n        setEmail: setLoginEmail,\n        pass: loginPass,\n        setPass: setLoginPass,\n        handleSubmit: login,\n        buttonName: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginRegisterForm, {\n        email: registerEmail,\n        setEmail: setRegisterEmail,\n        pass: registerPass,\n        setPass: setRegisterPass,\n        handleSubmit: register,\n        buttonName: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/Hardware-Inventory-App/client/pages/login.js"],"names":["firebase","useDebugValue","useState","useRouter","LoginRegisterForm","toast","Button","GoogleOutlined","Login","loginEmail","setLoginEmail","loginPass","setLoginPass","registerEmail","setRegisterEmail","registerPass","setRegisterPass","router","register","auth","createUserWithEmailAndPassword","then","user","console","log","catch","err","message","login","signInWithEmailAndPassword","googleLogin","signInWithPopup","GoogleAuthProvider"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,sBAAD,CAA5C;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,QAAD,CAA1C;AACA,QAAM;AAAA,OAACW,aAAD;AAAA,OAAgBC;AAAhB,MAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACa,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMe,MAAM,GAAGd,SAAS,EAAxB;;AAEA,QAAMe,QAAQ,GAAG,YAAY;AAC3B;AACA,UAAMlB,QAAQ,CACXmB,IADG,GAEHC,8BAFG,CAE4BP,aAF5B,EAE2CE,YAF3C,EAGHM,IAHG,CAGGC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACD,KALG,EAMHG,KANG,CAMIC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACArB,MAAAA,KAAK,CAACqB,GAAG,CAACC,OAAL,CAAL;AACD,KATG,CAAN;AAUD,GAZD;;AAcA,QAAMC,KAAK,GAAG,YAAY;AACxB;AACA,UAAM5B,QAAQ,CACXmB,IADG,GAEHU,0BAFG,CAEwBpB,UAFxB,EAEoCE,SAFpC,EAGHU,IAHG,CAGGC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACD,KALG,EAMHG,KANG,CAMIC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACArB,MAAAA,KAAK,CAACqB,GAAG,CAACC,OAAL,CAAL;AACD,KATG,CAAN;AAUD,GAZD;;AAcA,QAAMG,WAAW,GAAG,YAAY;AAC9B,UAAM9B,QAAQ,CAACmB,IAAT,GAAgBY,eAAhB,CAAgC,IAAI/B,QAAQ,CAACmB,IAAT,CAAca,kBAAlB,EAAhC,EACHX,IADG,CACGC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACD,KAHG,EAIHG,KAJG,CAIIC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACArB,MAAAA,KAAK,CAACqB,GAAG,CAACC,OAAL,CAAL;AACD,KAPG,CAAN;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,OAAO,EAAEG,WADX;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cALR;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,KAAK,EAAC,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAeE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAErB,UADT;AAEE,QAAA,QAAQ,EAAEC,aAFZ;AAGE,QAAA,IAAI,EAAEC,SAHR;AAIE,QAAA,OAAO,EAAEC,YAJX;AAKE,QAAA,YAAY,EAAEgB,KALhB;AAME,QAAA,UAAU,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAEf,aADT;AAEE,QAAA,QAAQ,EAAEC,gBAFZ;AAGE,QAAA,IAAI,EAAEC,YAHR;AAIE,QAAA,OAAO,EAAEC,eAJX;AAKE,QAAA,YAAY,EAAEE,QALhB;AAME,QAAA,UAAU,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CApFD;;AAsFA,eAAeV,KAAf","sourcesContent":["import firebase from \"../firebase\";\r\nimport { useDebugValue, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport LoginRegisterForm from \"../components/LoginRegisterForm\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"antd\";\r\nimport { GoogleOutlined } from \"@ant-design/icons\";\r\n\r\nconst Login = () => {\r\n  const [loginEmail, setLoginEmail] = useState(\"mccornhusk@gmail.com\");\r\n  const [loginPass, setLoginPass] = useState(\"123456\");\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPass, setRegisterPass] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  const register = async () => {\r\n    //console.log(registerEmail, registerPass)\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(registerEmail, registerPass)\r\n      .then((user) => {\r\n        console.log(\"REGISTER\", user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n      });\r\n  };\r\n\r\n  const login = async () => {\r\n    //console.log(loginEmail, loginPass)\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(loginEmail, loginPass)\r\n      .then((user) => {\r\n        console.log(\"LOGIN\", user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n      });\r\n  };\r\n\r\n  const googleLogin = async () => {\r\n    await firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider())\r\n      .then((user) => {\r\n        console.log(\"LOGIN\", user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"text-center pt-4 display-4\">Login / Register</h2>\r\n\r\n      <button\r\n        onClick={googleLogin}\r\n        className=\"mb-3 col-md-6 offset-md-3\"\r\n        type=\"success\"\r\n        shape=\"round\"\r\n        icon={<GoogleOutlined />}\r\n        size=\"large\"\r\n        block=\"true\"\r\n      >\r\n        Login with Google\r\n        </button>\r\n\r\n      <div className=\"row\">\r\n        <LoginRegisterForm\r\n          email={loginEmail}\r\n          setEmail={setLoginEmail}\r\n          pass={loginPass}\r\n          setPass={setLoginPass}\r\n          handleSubmit={login}\r\n          buttonName=\"Login\"\r\n        />\r\n\r\n        <LoginRegisterForm\r\n          email={registerEmail}\r\n          setEmail={setRegisterEmail}\r\n          pass={registerPass}\r\n          setPass={setRegisterPass}\r\n          handleSubmit={register}\r\n          buttonName=\"Register\"\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}