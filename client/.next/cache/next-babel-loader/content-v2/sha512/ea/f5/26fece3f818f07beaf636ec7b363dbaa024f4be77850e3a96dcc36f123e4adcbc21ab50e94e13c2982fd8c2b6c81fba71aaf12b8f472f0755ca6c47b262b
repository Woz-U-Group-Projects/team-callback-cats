{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Jacob/Desktop/hardware-inventory/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Jacob/Desktop/hardware-inventory/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\n//create a component that will keep track of user's auth state\n//then wrap _app.js so that entire app knows if the user is logged in or not\nimport React, { useEffect, useContext } from 'react';\nimport firebase from '../firebase';\nimport { Context } from '../context';\nimport { axiosAuth } from '../actions/axios';\nimport { setCookie, destroyCookie } from 'nookies';\n\nvar FirebaseAuthState = function FirebaseAuthState(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(Context),\n      dispatch = _useContext.dispatch;\n\n  useEffect(function () {\n    var handle = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user, token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"refreshing token...\");\n              user = firebase.auth().currentUser;\n\n              if (!user) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 5;\n              return user.getIdToken(true);\n\n            case 5:\n              token = _context.sent;\n              destroyCookie(null, \"token\");\n              setCookie(null, \"token\", token, {}); // get user info from backend, not firebase\n\n              axiosAuth.post(\"/current-user\").then(function (res) {\n                // console.log(\"USER ROUTE RES IN FIREBASE_AUTH_STATE\", res);\n                dispatch({\n                  type: \"LOGIN\",\n                  payload: res.data\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), 10 * 60 * 1000);\n    return function () {\n      return clearInterval(handle);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(FirebaseAuthState, \"o3sFqHzzIboOoOF6b2FSmERiAhY=\");\n\n_c = FirebaseAuthState;\nexport default FirebaseAuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseAuthState\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/hardware-inventory/client/components/FirebaseAuthState.js"],"names":["React","useEffect","useContext","firebase","Context","axiosAuth","setCookie","destroyCookie","FirebaseAuthState","children","dispatch","handle","setInterval","console","log","user","auth","currentUser","getIdToken","token","post","then","res","type","payload","data","clearInterval"],"mappings":";;;;;;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,SAAzC;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACnBP,UAAU,CAACE,OAAD,CADS;AAAA,MAChCM,QADgC,eAChCA,QADgC;;AAIxCT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,MAAM,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,cAAAA,OAAO,CAACC,GAAR;AACMC,cAAAA,IAFmB,GAEZZ,QAAQ,CAACa,IAAT,GAAgBC,WAFJ;;AAAA,mBAGrBF,IAHqB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIHA,IAAI,CAACG,UAAL,CAAgB,IAAhB,CAJG;;AAAA;AAIjBC,cAAAA,KAJiB;AAKvBZ,cAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,CAAb;AACAD,cAAAA,SAAS,CAAC,IAAD,EAAO,OAAP,EAAgBa,KAAhB,EAAuB,EAAvB,CAAT,CANuB,CAOvB;;AACAd,cAAAA,SAAS,CAACe,IAAV,kBAAgCC,IAAhC,CAAqC,UAACC,GAAD,EAAS;AAC5C;AACAZ,gBAAAA,QAAQ,CAAC;AACPa,kBAAAA,IAAI,EAAE,OADC;AAEPC,kBAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,iBAAD,CAAR;AAID,eAND;;AARuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAgBvB,KAAK,EAAL,GAAU,IAhBa,CAA1B;AAkBA,WAAO;AAAA,aAAMC,aAAa,CAACf,MAAD,CAAnB;AAAA,KAAP;AACD,GApBM,EAoBJ,EApBI,CAAT;AAsBA,sBAAO;AAAA,cAAGF;AAAH,mBAAP;AACH,CA3BD;;GAAMD,iB;;KAAAA,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["//create a component that will keep track of user's auth state\r\n//then wrap _app.js so that entire app knows if the user is logged in or not\r\n\r\nimport React, { useEffect, useContext } from 'react';\r\nimport firebase from '../firebase';\r\nimport { Context } from '../context';\r\nimport { axiosAuth } from '../actions/axios';\r\nimport { setCookie, destroyCookie } from 'nookies';\r\n\r\n\r\nconst FirebaseAuthState = ({ children }) => {\r\n    const { dispatch } = useContext(Context);\r\n\r\n\r\n    useEffect(() => {\r\n        const handle = setInterval(async () => {\r\n          console.log(`refreshing token...`);\r\n          const user = firebase.auth().currentUser;\r\n          if (user) {\r\n            const token = await user.getIdToken(true);\r\n            destroyCookie(null, \"token\");\r\n            setCookie(null, \"token\", token, {});\r\n            // get user info from backend, not firebase\r\n            axiosAuth.post(`/current-user`).then((res) => {\r\n              // console.log(\"USER ROUTE RES IN FIREBASE_AUTH_STATE\", res);\r\n              dispatch({\r\n                type: \"LOGIN\",\r\n                payload: res.data,\r\n              });\r\n            });\r\n          }\r\n        }, 10 * 60 * 1000);\r\n     \r\n        return () => clearInterval(handle);\r\n      }, []);\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default FirebaseAuthState;"]},"metadata":{},"sourceType":"module"}