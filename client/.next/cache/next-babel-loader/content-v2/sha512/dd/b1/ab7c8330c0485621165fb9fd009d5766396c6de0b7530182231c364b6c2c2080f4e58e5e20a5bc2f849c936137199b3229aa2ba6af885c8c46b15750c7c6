{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n//create a component that will keep track of user's auth state\n//then wrap _app.js so that entire app knows if the user is logged in or not\nimport React, { useEffect, useContext } from 'react';\nimport firebase from '../firebase';\nimport { Context } from '../context';\nimport { axiosAuth } from '../actions/axios';\nimport { setCookie, destroyCookie } from 'nookies';\n\nconst FirebaseAuthState = ({\n  children\n}) => {\n  const {\n    dispatch\n  } = useContext(Context);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async user => {\n      if (!user) {\n        dispatch({\n          type: 'LOGOUT'\n        });\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", \"\", {});\n      } else {\n        const {\n          token\n        } = await user.getIdTokenResult(); //set token to cookie\n\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", token, {});\n        axiosAuth.post('/current-user', {}).then(res => {\n          console.log('RES =====>', res);\n          dispatch({\n            type: 'LOGIN',\n            payload: res.data\n          });\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  });\n};\n\nexport default FirebaseAuthState;","map":null,"metadata":{},"sourceType":"module"}