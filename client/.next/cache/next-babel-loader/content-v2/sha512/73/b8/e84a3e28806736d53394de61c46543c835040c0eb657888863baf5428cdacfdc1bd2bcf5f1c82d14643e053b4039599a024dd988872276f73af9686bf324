{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\hardware-inventory\\\\client\\\\context\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useReducer } from 'react'; //reducer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}; //initial state\n\n\nconst initialState = {\n  user: null\n}; //create context\n\nconst Context = /*#__PURE__*/createContext({}); //context provider\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\nexport { Context, Provider };","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/hardware-inventory/client/context/index.js"],"names":["createContext","useReducer","reducer","state","action","type","user","payload","initialState","Context","Provider","children","dispatch","value"],"mappings":";;;;;;;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,QAAwC,OAAxC,C,CAGA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACI,6CAAWF,KAAX;AAAkBG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAA/B;;AACJ,SAAK,QAAL;AACI,6CAAWJ,KAAX;AAAkBG,QAAAA,IAAI,EAAE;AAAxB;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD,C,CAWA;;;AACA,MAAMK,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE;AADW,CAArB,C,CAIA;;AACA,MAAMG,OAAO,gBAAGT,aAAa,CAAC,EAAD,CAA7B,C,CAGA;;AACA,MAAMU,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC7B,QAAM;AAAA,OAACR,KAAD;AAAA,OAAQS;AAAR,MAAoBX,UAAU,CAACC,OAAD,EAAUM,YAAV,CAApC;AACA,QAAMK,KAAK,GAAG;AAAEV,IAAAA,KAAF;AAASS,IAAAA;AAAT,GAAd;AACA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA,cAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAJD;;AAMA,SAAQF,OAAR,EAAiBC,QAAjB","sourcesContent":["import {createContext, useReducer} from 'react';\r\n\r\n\r\n//reducer\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN':\r\n            return {...state, user: action.payload}\r\n        case 'LOGOUT': \r\n            return {...state, user: null};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//initial state\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\n//create context\r\nconst Context = createContext({})\r\n\r\n\r\n//context provider\r\nconst Provider = ({children}) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const value = { state, dispatch };\r\n    return <Context.Provider value={value}>{children}</Context.Provider>\r\n}\r\n\r\nexport {Context, Provider};"]},"metadata":{},"sourceType":"module"}