{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\hardware-inventory\\\\client\\\\pages\\\\reset-password.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport firebase from '../firebase';\nimport { useRouter } from 'next/router';\nimport { Context } from '../context';\nimport { toast } from 'react-toastify';\n\nvar PasswordReset = function PasswordReset() {\n  _s();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(Context),\n      user = _useContext.state.user;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (user !== null) {\n      router.push('/');\n    }\n  }, [user]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    var config = {\n      url: process.env.passwordResetRedirect,\n      handleCodeInApp: true\n    };\n    firebase.auth().sendPasswordResetEmail(email, config).then(function () {\n      setEmail('');\n      setLoading(false);\n      toast(\"Check your email for password reset link\");\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      toast(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"If you have already registered, you can enter your email address to receive a password reset link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: function onChange(e) {\n          return setEmail(e.target.value);\n        },\n        placeholder: \"Type your email here\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !email || loading,\n        children: loading ? 'Processing...' : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PasswordReset, \"n3T3cZoLvhdlymlIw2DmYKo0MO8=\", false, function () {\n  return [useRouter];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/hardware-inventory/client/pages/reset-password.js"],"names":["useState","useEffect","useContext","firebase","useRouter","Context","toast","PasswordReset","email","setEmail","loading","setLoading","user","state","router","push","handleSubmit","e","preventDefault","config","url","process","env","passwordResetRedirect","handleCodeInApp","auth","sendPasswordResetEmail","then","error","message","target","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACEP,QAAQ,CAAC,EAAD,CADV;AAAA,MACjBQ,KADiB;AAAA,MACVC,QADU;;AAAA,mBAEMT,QAAQ,CAAC,KAAD,CAFd;AAAA,MAEjBU,OAFiB;AAAA,MAERC,UAFQ;;AAAA,oBAMpBT,UAAU,CAACG,OAAD,CANU;AAAA,MAKXO,IALW,eAKpBC,KALoB,CAKXD,IALW;;AAQxB,MAAIE,MAAM,GAAGV,SAAS,EAAtB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGW,IAAI,KAAK,IAAZ,EAAkB;AACdE,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAMQ,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADN;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAf;AAKArB,IAAAA,QAAQ,CAACsB,IAAT,GAAgBC,sBAAhB,CAAuClB,KAAvC,EAA8CW,MAA9C,EACKQ,IADL,CACU,YAAM;AACRlB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH,KALL,WAMW,UAAAsB,KAAK,EAAI;AACZjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,KAAK,CAACsB,KAAK,CAACC,OAAP,CAAL;AACH,KATL;AAUH,GAnBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAMI;AAAM,MAAA,QAAQ,EAAEb,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,KAAK,EAAER,KAFX;AAGI,QAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,iBAAOR,QAAQ,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAf;AAAA,SAHd;AAII,QAAA,WAAW,EAAC,sBAJhB;AAKI,QAAA,SAAS;AALb;AAAA;AAAA;AAAA;AAAA,eADJ,eAQI;AAAA;AAAA;AAAA;AAAA,eARJ,eASI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,QAAQ,EAAE,CAACvB,KAAD,IAAUE,OAAxD;AAAA,kBACKA,OAAO,GAAG,eAAH,GAAqB;AADjC;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAsBH,CA3DD;;GAAMH,a;UAQWH,S;;;KARXG,a;AA6DN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport firebase from '../firebase';\r\nimport { useRouter } from 'next/router';\r\nimport { Context } from '../context';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PasswordReset = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const {\r\n        state: { user },\r\n    } = useContext(Context);\r\n\r\n    let router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if(user !== null) {\r\n            router.push('/');\r\n        }\r\n    }, [user]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.passwordResetRedirect,\r\n            handleCodeInApp: true,\r\n        };\r\n\r\n        firebase.auth().sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast(\"Check your email for password reset link\");\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                toast(error.message);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container col-md-6 offset-md-3 p-5\">\r\n            <h2>Reset Password</h2>\r\n            <p className=\"lead\">If you have already registered,\r\n            you can enter your email address to receive a password reset link\r\n            </p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Type your email here\"\r\n                    autoFocus\r\n                />\r\n                <br></br>\r\n                <button className=\"btn btn-primary\" disabled={!email || loading}>\r\n                    {loading ? 'Processing...' : \"Submit\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}